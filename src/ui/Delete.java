package ui;

import model.Message;
import service.MessageService;
import service.MessageServiceImpl;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ContainerAdapter;
import java.awt.event.ContainerEvent;
import java.util.List;

public class Delete {
    private JTextField nameText;
    private JButton searchButton;
    private JPanel deletePanel;
    private JButton deleteButton;
    private JLabel id;
    private JLabel qqLabel;
    private JLabel nameLabel;
    private JLabel emailLabel;
    private JLabel phoneLabel;
    private JLabel remarkLabel;
    private JLabel typeLabel;
    private JTextField idText;
    private JTextField name;
    private JTextField type;
    private JTextField phoneNum;
    private JTextField email;
    private JTextField qq;
    private JTextField remark;
    private JPanel messPanel;
    private JButton back;

    MessageService messageService = new MessageServiceImpl();

    public Delete() {
        messPanel.setVisible(false);
        searchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String nameValue = nameText.getText();
                List<Message> messageList = messageService.getMessageByName(nameValue);
                if (messageList.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "查无此人！");
                } else {
                    Message message = messageList.get(0);
                    idText.setText(String.valueOf(message.getId()));
                    phoneNum.setText(message.getPhoneNum());
                    name.setText(message.getName());
                    type.setText(message.getType().getMessage());
                    email.setText(message.getEmail());
                    qq.setText(message.getQqNum());
                    remark.setText(message.getRemark());
                    messPanel.setVisible(true);
                }
            }
        });


        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String value = phoneNum.getText();
                boolean result = messageService.deleteMessage(value);
                if (result) {
                    JOptionPane.showMessageDialog(null, "删除成功！");
                    messPanel.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "删除失败！");
                }
            }
        });
        back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PhoneBook phoneBook = new PhoneBook();
                ShowMenu.show("电话簿主页", phoneBook.getMainPanel());
            }
        });
    }

    public JPanel getDeletePanel() {
        return deletePanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        deletePanel = new JPanel();
        deletePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 4, new Insets(10, 20, 20, 20), -1, -1));
        nameText = new JTextField();
        Font nameTextFont = this.$$$getFont$$$(null, -1, 18, nameText.getFont());
        if (nameTextFont != null) nameText.setFont(nameTextFont);
        nameText.setText("");
        deletePanel.add(nameText, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(384, 40), null, 0, false));
        searchButton = new JButton();
        Font searchButtonFont = this.$$$getFont$$$(null, -1, 20, searchButton.getFont());
        if (searchButtonFont != null) searchButton.setFont(searchButtonFont);
        searchButton.setText("查询");
        deletePanel.add(searchButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 40), null, 0, false));
        messPanel = new JPanel();
        messPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(8, 2, new Insets(0, 0, 0, 0), -1, -1));
        deletePanel.add(messPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        qqLabel = new JLabel();
        Font qqLabelFont = this.$$$getFont$$$(null, -1, 20, qqLabel.getFont());
        if (qqLabelFont != null) qqLabel.setFont(qqLabelFont);
        qqLabel.setText("QQ号码");
        messPanel.add(qqLabel, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nameLabel = new JLabel();
        Font nameLabelFont = this.$$$getFont$$$(null, -1, 20, nameLabel.getFont());
        if (nameLabelFont != null) nameLabel.setFont(nameLabelFont);
        nameLabel.setText("姓名");
        messPanel.add(nameLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        emailLabel = new JLabel();
        Font emailLabelFont = this.$$$getFont$$$(null, -1, 20, emailLabel.getFont());
        if (emailLabelFont != null) emailLabel.setFont(emailLabelFont);
        emailLabel.setText("邮箱");
        messPanel.add(emailLabel, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        phoneLabel = new JLabel();
        Font phoneLabelFont = this.$$$getFont$$$(null, -1, 20, phoneLabel.getFont());
        if (phoneLabelFont != null) phoneLabel.setFont(phoneLabelFont);
        phoneLabel.setText("手机号码");
        messPanel.add(phoneLabel, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        remarkLabel = new JLabel();
        Font remarkLabelFont = this.$$$getFont$$$(null, -1, 20, remarkLabel.getFont());
        if (remarkLabelFont != null) remarkLabel.setFont(remarkLabelFont);
        remarkLabel.setText("备注");
        messPanel.add(remarkLabel, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        typeLabel = new JLabel();
        Font typeLabelFont = this.$$$getFont$$$(null, -1, 20, typeLabel.getFont());
        if (typeLabelFont != null) typeLabel.setFont(typeLabelFont);
        typeLabel.setText("类别");
        messPanel.add(typeLabel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        id = new JLabel();
        Font idFont = this.$$$getFont$$$(null, -1, 20, id.getFont());
        if (idFont != null) id.setFont(idFont);
        id.setText("编号");
        messPanel.add(id, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 17), null, 0, false));
        idText = new JTextField();
        idText.setEditable(false);
        idText.setEnabled(true);
        Font idTextFont = this.$$$getFont$$$(null, -1, 20, idText.getFont());
        if (idTextFont != null) idText.setFont(idTextFont);
        idText.setText("");
        messPanel.add(idText, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        name = new JTextField();
        name.setEditable(false);
        Font nameFont = this.$$$getFont$$$(null, -1, 20, name.getFont());
        if (nameFont != null) name.setFont(nameFont);
        name.setText("");
        messPanel.add(name, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        type = new JTextField();
        type.setEditable(false);
        Font typeFont = this.$$$getFont$$$(null, -1, 20, type.getFont());
        if (typeFont != null) type.setFont(typeFont);
        messPanel.add(type, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        phoneNum = new JTextField();
        phoneNum.setEditable(false);
        Font phoneNumFont = this.$$$getFont$$$(null, -1, 20, phoneNum.getFont());
        if (phoneNumFont != null) phoneNum.setFont(phoneNumFont);
        messPanel.add(phoneNum, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        email = new JTextField();
        email.setEditable(false);
        email.setEnabled(true);
        Font emailFont = this.$$$getFont$$$(null, -1, 20, email.getFont());
        if (emailFont != null) email.setFont(emailFont);
        messPanel.add(email, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        remark = new JTextField();
        remark.setEditable(false);
        Font remarkFont = this.$$$getFont$$$(null, -1, 20, remark.getFont());
        if (remarkFont != null) remark.setFont(remarkFont);
        messPanel.add(remark, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        qq = new JTextField();
        qq.setEditable(false);
        Font qqFont = this.$$$getFont$$$(null, -1, 20, qq.getFont());
        if (qqFont != null) qq.setFont(qqFont);
        messPanel.add(qq, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        deleteButton = new JButton();
        Font deleteButtonFont = this.$$$getFont$$$(null, -1, 18, deleteButton.getFont());
        if (deleteButtonFont != null) deleteButton.setFont(deleteButtonFont);
        deleteButton.setText("删除");
        messPanel.add(deleteButton, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 38), null, 0, false));
        back = new JButton();
        Font backFont = this.$$$getFont$$$(null, -1, 16, back.getFont());
        if (backFont != null) back.setFont(backFont);
        back.setText("返回主页");
        deletePanel.add(back, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return deletePanel;
    }

}
