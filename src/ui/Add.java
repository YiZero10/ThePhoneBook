package ui;

import model.Message;
import model.Type;
import service.MessageService;
import service.MessageServiceImpl;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.regex.Pattern;

public class Add {
    private JPanel addPanel;
    private JTextField nameText;
    private JTextField remarkText;
    private JTextField emailText;
    private JTextField phoneText;
    private JTextField qqText;
    private JButton addButton;
    private JLabel name;
    private JComboBox setType;
    private JLabel phoneNum;
    private JLabel type;
    private JLabel email;
    private JLabel qqNum;
    private JLabel remark;
    private JButton back;
    MessageService messageService = new MessageServiceImpl();

    private static final String PHONENUMBER = "^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\\d{8})$";
    private static final String EMAIL = "^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$";

    public Add() {
        back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PhoneBook phoneBook = new PhoneBook();
                ShowMenu.show("电话簿主页", phoneBook.getMainPanel());
            }
        });
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (phoneText.getText() == null || "".equals(phoneText.getText())) {
                    JOptionPane.showMessageDialog(null, "手机号码不能为空", "添加失败", 0);
                } else if (Pattern.matches(PHONENUMBER, phoneText.getText()) && Pattern.matches(EMAIL, emailText.getText())) {
                    {
                        Message message = new Message(
                                nameText.getText(), phoneText.getText(), emailText.getText(), qqText.getText(), remarkText.getText()
                        );
                        if (String.valueOf(setType.getSelectedItem()).equals("办公")) {
                            message.setType(Type.WORK);
                        } else if (String.valueOf(setType.getSelectedItem()).equals("个人")) {
                            message.setType(Type.PERSONAGE);
                        } else {
                            message.setType(Type.BUSINESS);
                        }
                        if (messageService.addMessage(message)) {
                            JOptionPane.showMessageDialog(null, "添加成功");
                            nameText.setText("");
                            phoneText.setText("");
                            emailText.setText("");
                            qqText.setText("");
                            remarkText.setText("");
                        } else {
                            JOptionPane.showMessageDialog(null, "电话簿中已经存在此号码！", "添加失败", 0);
                        }
                    }
                } else if (!Pattern.matches(PHONENUMBER, phoneText.getText())) {
                    JOptionPane.showMessageDialog(null, "手机号码不符合规则！", "添加失败", 0);
                } else if (!Pattern.matches(EMAIL, emailText.getText())) {
                    JOptionPane.showMessageDialog(null, "邮箱不符合规则！", "添加失败", 0);
                }
            }
        });
    }

    public JPanel getAddPanel() {
        return addPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        addPanel = new JPanel();
        addPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 2, new Insets(10, 20, 10, 20), -1, -1));
        nameText = new JTextField();
        Font nameTextFont = this.$$$getFont$$$(null, -1, 18, nameText.getFont());
        if (nameTextFont != null) nameText.setFont(nameTextFont);
        addPanel.add(nameText, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        remarkText = new JTextField();
        Font remarkTextFont = this.$$$getFont$$$(null, -1, 18, remarkText.getFont());
        if (remarkTextFont != null) remarkText.setFont(remarkTextFont);
        addPanel.add(remarkText, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        emailText = new JTextField();
        Font emailTextFont = this.$$$getFont$$$(null, -1, 18, emailText.getFont());
        if (emailTextFont != null) emailText.setFont(emailTextFont);
        addPanel.add(emailText, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        phoneText = new JTextField();
        Font phoneTextFont = this.$$$getFont$$$(null, -1, 18, phoneText.getFont());
        if (phoneTextFont != null) phoneText.setFont(phoneTextFont);
        addPanel.add(phoneText, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        qqText = new JTextField();
        Font qqTextFont = this.$$$getFont$$$(null, -1, 18, qqText.getFont());
        if (qqTextFont != null) qqText.setFont(qqTextFont);
        addPanel.add(qqText, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        name = new JLabel();
        Font nameFont = this.$$$getFont$$$(null, -1, 18, name.getFont());
        if (nameFont != null) name.setFont(nameFont);
        name.setText("姓名");
        addPanel.add(name, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        phoneNum = new JLabel();
        Font phoneNumFont = this.$$$getFont$$$(null, -1, 18, phoneNum.getFont());
        if (phoneNumFont != null) phoneNum.setFont(phoneNumFont);
        phoneNum.setText("电话号码");
        addPanel.add(phoneNum, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        type = new JLabel();
        Font typeFont = this.$$$getFont$$$(null, -1, 18, type.getFont());
        if (typeFont != null) type.setFont(typeFont);
        type.setText("类别");
        addPanel.add(type, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        email = new JLabel();
        Font emailFont = this.$$$getFont$$$(null, -1, 18, email.getFont());
        if (emailFont != null) email.setFont(emailFont);
        email.setText("邮箱");
        addPanel.add(email, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        qqNum = new JLabel();
        Font qqNumFont = this.$$$getFont$$$(null, -1, 18, qqNum.getFont());
        if (qqNumFont != null) qqNum.setFont(qqNumFont);
        qqNum.setText("QQ");
        addPanel.add(qqNum, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        remark = new JLabel();
        Font remarkFont = this.$$$getFont$$$(null, -1, 18, remark.getFont());
        if (remarkFont != null) remark.setFont(remarkFont);
        remark.setText("备注");
        addPanel.add(remark, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        setType = new JComboBox();
        setType.setEditable(false);
        Font setTypeFont = this.$$$getFont$$$(null, -1, 18, setType.getFont());
        if (setTypeFont != null) setType.setFont(setTypeFont);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("办公");
        defaultComboBoxModel1.addElement("个人");
        defaultComboBoxModel1.addElement("商务");
        setType.setModel(defaultComboBoxModel1);
        setType.setToolTipText("办公");
        addPanel.add(setType, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 40), null, 0, false));
        addButton = new JButton();
        Font addButtonFont = this.$$$getFont$$$(null, -1, 18, addButton.getFont());
        if (addButtonFont != null) addButton.setFont(addButtonFont);
        addButton.setText("提交");
        addPanel.add(addButton, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 36), null, 0, false));
        back = new JButton();
        Font backFont = this.$$$getFont$$$(null, -1, 14, back.getFont());
        if (backFont != null) back.setFont(backFont);
        back.setText("返回主页");
        addPanel.add(back, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return addPanel;
    }

}
